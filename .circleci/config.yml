# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: tomcat:9.0.41-jdk11

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:      
      # install tool screen
      - run: 
          name: install tool screen
          command: |
            whoami
            cat /etc/*-release
            apt update -y
            apt install screen -y
            screen â€“version

      - checkout

      - run: pwd
      - run: ls -al .

      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
          - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
          - gradle-repo-v1-{{ .Branch }}-
          - gradle-repo-v1-

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: "build application"
          command: |
            whoami
            ./gradlew clean build

      - run:
          name: "start webapp on project"
          command: |
            screen -d -m -s "webapp_on_project" ./gradlew appRun

      - run:
          name: "archives all configured gretty products"
          command: |
            ./gradlew archiveAllProducts

      - run:
          name: "start webapp on local"
          command: |
            screen -d -m -s "webapp_on_local" ./build/output/_gradle_java/start.sh

      - run:
          name: "start webapp on docker"
          command: |
            ls -al /var/lib/jetty/webapps/
            cp -rf ./build/libs/_gradle_java.war /usr/local/tomcat/webapps/ROOT.war
