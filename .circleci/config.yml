# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      #- image: circleci/openjdk:11-jdk
      - image: azul/zulu-openjdk:11

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:      
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # install tools
      - run: apt-get update -y
      - run: apt-get install -y screen

      # build application
      - run: ./gradlew clean build

      # start webserver on project
      - run: screen -d -m -s "webapp_on_project" ./gradlew appRun

      # archives all configured gretty products.
      - run: ./gradlew archiveAllProducts

      # start webserver on local
      - run: screen -d -m -s "webapp_on_local" ./build/output/_gradle_java/start.sh

      # start webserver on docker
      - run: ls -al /usr/local/jetty/webapps/
      - run: cp -rf ./build/libs/_gradle_java.war /var/lib/jetty/webapps/ROOT.war

      # access the web server on docker
      - run: curl http://localhost:8080/