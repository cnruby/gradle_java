version: 2.1

defaults: &defaults
  docker:
    - image: jetty:9.4.35-jdk11
      user: root
    # https://stackoverflow.com/questions/50320263/change-user-on-circleci
    # https://blog.sshn.me/posts/circleci-change-user/
    # https://circleci.com/blog/how-to-do-vulnerability-management-with-docker-and-ci-cd/

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb

  steps:      
    # Download and cache dependencies
    # https://circleci.com/docs/2.0/caching/
    - restore_cache:
        keys:
        - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
        - gradle-repo-v1-{{ .Branch }}-
        - gradle-repo-v1-

    - save_cache:
        paths:
          - ~/.gradle
        key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}

jobs:
  project_build:
    <<: *defaults
    steps:      
      - checkout

      - run: 
          name: install tools
          command: |
            whoami
            cat /etc/*-release
            apt update -y
            apt install screen netcat -y
            screen –version

      # /var/lib/jetty/repo
      - run: pwd
      # /var/lib/jetty/repo/build.gradle
      - run: ls -al .

      - run:
          name: "build application"
          command: |
            whoami
            cp ./jcenter.properties.sample ~/jcenter.properties
            ./gradlew clean build

      - run:
          name: "start webapp on project"
          command: |
            screen -d -m -s "webapp_on_project" ./gradlew jettyStart

      - run:
          name: "browse the website"
          command: |
            sleep 5 && nc -vz localhost 8080
            curl http://127.0.0.1:8080/
            curl http://127.0.0.1:8080/hello
            ./gradlew jettyStop

  local_build:
    <<: *defaults
    steps:      
      - checkout
  
      # install tool screen
      - run: 
          name: install tools
          command: |
            whoami
            cat /etc/*-release
            apt update -y
            apt install screen netcat -y
            screen –version

      - run:
          name: "build application"
          command: |
            whoami
            cp ./jcenter.properties.sample ~/jcenter.properties
            ./gradlew clean build

      - run:
          name: "archives all configured gretty products"
          command: |
            ./gradlew archiveAllProducts

      - run:
          name: "start webapp on local"
          command: |
            screen -d -m -s "webapp_on_local" ./build/output/_gradle_java/start.sh

      - run:
          name: "start webapp on docker"
          command: |
            ls -al /var/lib/jetty/webapps/
            cp -rf ./build/libs/_gradle_java-0.120.1.war /var/lib/jetty/webapps/ROOT.war

      - run:
          name: "browse the website"
          command: |
            sleep 5 && nc -vz localhost 8080
            curl http://127.0.0.1:8080/
            curl http://127.0.0.1:8080/hello

  bintray_build:
    machine: true
      # image: ubuntu-2004:202010-01

    steps:      
      - checkout

      - run: 
          name: "install tools"
          command: |
            cat /etc/*-release
            sudo apt update -y
            sudo apt install curl wget netcat -y

      - run:
          name: "get war file from bintray.com"
          command: |
            rm -rf _gradle_java.war
            wget https://dl.bintray.com/cnruby/gradle_java_jcenter/de/iotoi/basic_120/0.120.1/basic_120-0.120.1.war -O _gradle_java.war

      - run:
          name: "start webserver with web app"
          command: |
            docker build --tag=120_gradle_java_image .
            docker run -d --name=120_gradle_java_container -p 80:8080 120_gradle_java_image

      - run:
          name: "browse the website"
          command: |
            sleep 5 && nc -vz localhost 80
            curl http://127.0.0.1:80/
            curl http://127.0.0.1:80/hello
            docker stop 120_gradle_java_container

      - run:
          name: "get war file from JCenter"
          command: |
            rm -rf _gradle_java.war
            wget https://jcenter.bintray.com/de/iotoi/basic_120/0.120.1/basic_120-0.120.1.war -O _gradle_java.war

      - run:
          name: "start webserver with web app"
          command: |
            docker build --tag=120_gradle_java_image .
            docker container rm 120_gradle_java_container
            docker run -d --name=120_gradle_java_container -p 80:8080 120_gradle_java_image

      - run:
          name: "browse the website"
          command: |
            sleep 5 && nc -vz localhost 80
            curl http://127.0.0.1:80/
            curl http://127.0.0.1:80/hello
            docker stop 120_gradle_java_container

workflows:
  build:
    jobs:
      - project_build
      - local_build
      - bintray_build