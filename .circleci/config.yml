# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      #- image: circleci/openjdk:11-jdk
      - image: azul/zulu-openjdk:11

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:      
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # install tools
      - run: apt-get update -y
      - run: apt-get install -y unzip

      # about Gradle
      - run: ./gradlew --version

      - run:
          name: "Check project libraries"
          command: |
            cp ./jcenter.properties.sample $HOME/jcenter.properties
            ./gradlew check
            ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: 
          name: "run application on project"
          command: ./gradlew -q app:run

      - run: 
          name: "Use and Test The Library from the Website `bintrag.com"
          command: |
            mkdir libs
            wget -P ./libs/ https://dl.bintray.com/cnruby/gradle_java_jcenter/de/iotoi/basic_118/0.118.1/basic_118-0.118.1.jar
            cp -f app/build.gradle.m1 app/build.gradle
            ./gradlew -q app:run
          
      - run: 
          name: "Use The Library from the `JCenter`"
          command: |
            cp -f app/build.gradle.m2 app/build.gradle
            ./gradlew -q app:run

      - run: 
          name: ""
          command: |
            cp -f app/build.gradle.m3 app/build.gradle
            ./gradlew clean build publishToMavenLocal
            ./gradlew -q app:run
      
