# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: CI--basic_116

# on: [push]
on: 
  push:
    branches:
    # branches-ignore:
      - basic_116

jobs:
  build:
    name: Build--Java--App
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set--up--JDK--1.8}
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Check--the--project
      run: |
        cp ./jcenter.properties.sample ~/jcenter.properties
        ./gradlew check
        ./gradlew dependencies

    - name: Use--the--project
      run: |
        ./gradlew propertiesCommand -PBINTRAY_USER=username_cmd -PBINTRAY_API_KEY=1234567890qwertyuiopasdfghjklzxcvbnm1234 -PGPG_PASSPHRASE=password_cmd
        ./gradlew propertiesGradle
        ./gradlew propertiesGroovy
        export BINTRAY_USER=username
        export BINTRAY_API_KEY=1234567890qwertyuiopasdfghjklzxcvbnm1234
        export GPG_PASSPHRASE=password
        ./gradlew propertiesSystem


    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    # - name: Publish to GitHub Packages
    #   run: gradle publish
    #   env:
    #     USERNAME: ${{ github.actor }}
    #     TOKEN: ${{ secrets.GITHUB_TOKEN }}
